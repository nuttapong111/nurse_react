import React from "react";
import { Form, Input, Button, Typography } from "antd";
import axios from "axios";
import Swal from "sweetalert2";
import "./LoginPage.css"; // ‡πÉ‡∏ä‡πâ style ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Register

const { Title, Text } = Typography;
const api = import.meta.env.VITE_API_URL + "/auth/login";

// üîµ Forgot password popup
const handleForgotPassword = () => {
  Swal.fire({
    title: "‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?",
    text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô",
    input: "email",
    inputPlaceholder: "your@email.com",
    showCancelButton: true,
    confirmButtonText: "‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï",
    cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
    preConfirm: async (email) => {
      try {
        const res = await axios.post(
          import.meta.env.VITE_API_URL + "/auth/forgot-password",
          { email }
        );
        return res.data;
      } catch (error) {
        Swal.showValidationMessage(
          error?.response?.data?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏î‡πâ"
        );
      }
    },
  }).then((result) => {
    if (result.isConfirmed) {
      Swal.fire({
        icon: "success",
        title: "‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
      });
    }
  });
};

const LoginPage = () => {
  const [form] = Form.useForm();

  const onFinish = async (values) => {
    console.log("‚úÖ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß:", values); // Debug ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ

    try {
      const res = await axios.post(api, values);

      // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å token ‡∏•‡∏á localStorage ‡∏Å‡πà‡∏≠‡∏ô redirect
      localStorage.setItem("token", res.data.token); // ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ backend ‡∏™‡πà‡∏á token ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤

      Swal.fire({
        icon: "success",
        title: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        text: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
      }).then(() => {
        window.location.href = "/schedule"; // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á login
      });
    } catch (err) {
      Swal.fire({
        icon: "error",
        title: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        text: err?.response?.data?.message || "‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
        confirmButtonText: "‡∏õ‡∏¥‡∏î",
      });
    }
  };

  return (
    <div className="register-screen flex min-h-screen register-bg">
      <div className="register-form">
        <div className="w-full md:w-1/2 flex items-center justify-center px-6 py-12 bg-white">
          <div className="w-full max-w-sm">
            <Title level={1} className="text-center text-blue-900 mb-6">
              ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏£
            </Title>
            <Title level={3} className="text-center text-blue-900 mb-6">
              ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
            </Title>

            <Form form={form} layout="vertical" onFinish={onFinish}>
              <Form.Item
                label="‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                name="email"
                rules={[
                  { required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•" },
                  { type: "email", message: "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" },
                ]}
              >
                <Input size="large" />
              </Form.Item>

              <Form.Item
                label="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                name="password"
                rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" }]}
              >
                <Input.Password size="large" />
              </Form.Item>

              <div className="text-right mb-4">
                <a
                  className="text-blue-600 text-sm cursor-pointer"
                  onClick={handleForgotPassword}
                >
                  ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?
                </a>
              </div>

              <Form.Item>
                <Button type="primary" htmlType="submit" size="large" block>
                  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </Button>
              </Form.Item>
            </Form>

            <Text className="text-center block mt-4">
              ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ?{" "}
              <a href="/register" className="text-blue-600">
                ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
              </a>
            </Text>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LoginPage;
